{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","validateForm","alert","className","s","form","this","label","text","type","onChange","form__btn","Component","ContactList","contacts","onRemove","list","map","id","items","delete_btn","onClick","Filter","filter","filter__input","App","formSubmitHandler","newName","find","toLowerCase","contact","uuid","console","log","prev","deleteContact","uniqId","prevState","changeFilter","visibleContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d428fda.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16_x8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__yudaY\",\"label\":\"ContactForm_label__2X0pu\",\"text\":\"ContactForm_text__fBQW8\",\"form__btn\":\"ContactForm_form__btn__2Eh6v\"};","import {Component} from 'react';\r\nimport s from './ContactForm.module.css'\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const {name, value} = e.currentTarget;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const {name, number} = this.state;\r\n        this.props.onSubmit(name, number, this.reset);\r\n        const isValidForm = this.validateForm();\r\n\r\n        if(!isValidForm) return;\r\n        \r\n        this.reset();\r\n    }\r\n\r\n    validateForm = () => {\r\n        const {name, number} = this.state;\r\n        if(!name || !number) {\r\n            alert('Some field is empty')\r\n            return\r\n        }\r\n    }\r\n\r\n    // не очищает номер\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={s.form} onSubmit={this.handleSubmit}>\r\n                <h1>Phonebook</h1>\r\n                <label className={s.label}> \r\n                    <span className={s.text}>Name</span>\r\n                    <input \r\n                        type='text' \r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n                    \r\n                <label className={s.label}> \r\n                    <span className={s.text}>Number</span>\r\n                    <input \r\n                        type='tel' \r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n                <button className={s.form__btn} type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n    \r\n}    \r\n\r\nexport default ContactForm;","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport s from './ContactList.module.css'\r\n\r\n\r\nconst ContactList = ({contacts, onRemove}) => {\r\n    // if(contacts.length === 0) {\r\n    //     alert('The list is empty')\r\n    //     return null;\r\n    // }\r\n\r\n    // if(!contacts.name) {\r\n    //     // alert('The list is empty')\r\n    //     console.log('halo');\r\n    //   }\r\n    \r\n    \r\n    return (\r\n        <ul className={s.list}>\r\n        {contacts.map(({name, number, id}) => \r\n            <li className={s.items} key={id}>\r\n                <p className={s.text}>{name}: {number}</p>\r\n                <button \r\n                    className={s.delete_btn}\r\n                    type=\"button\"\r\n                    onClick={() => onRemove(id)}>\r\n                        Delete\r\n                </button>\r\n            </li>\r\n        )}\r\n    </ul>\r\n    )\r\n}\r\n    \r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        }),\r\n    ),\r\n    onRemove: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList;\r\n","import React from 'react'\r\nimport s from './Filter.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Filter = ({value, onChange}) => {\r\n    return (\r\n        <label className={s.filter}>\r\n          <span>Find contacts by name</span> \r\n          <input className={s.filter__input} type=\"text\" value={value} onChange={onChange}/>\r\n        </label>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react';\n\nimport ContactForm from './components/ContactForm'\nimport ContactList from './components/ContactList'\nimport Filter from './components/Filter'\n// import initialContacts from './data/contacts.json'\n\nimport s from './App.module.css';\nimport { v4 as uuid } from 'uuid';\n\n\n\nclass App extends Component {\n  state = {\n    // contacts: initialContacts,\n    contacts: [],\n    filter: ''\n  };\n\n  formSubmitHandler = (newName, number, reset) => {\n    if (this.state.contacts.find(({ name }) => name.toLowerCase() === newName.toLowerCase())) {\n          alert('Contact is already exist');\n          reset();\n          return;\n        }\n\n\n    const contact = {\n      id: uuid(),\n      name: newName,\n      number,\n    }\n    console.log(contact);\n    this.setState(prev => {\n      reset();\n      return {\n        contacts: [...prev.contacts, contact]\n      }\n    })\n  }\n  \n  deleteContact = (uniqId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== uniqId)\n    }))\n  }\n\n  changeFilter = (e) => {\n    this.setState({filter: e.currentTarget.value})\n  }\n\n  visibleContacts = () => {\n    const {contacts, filter} = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact => \n      contact.name.toLowerCase().includes(normalizedFilter));\n  }\n\n  componentDidMount () {\n    console.log('Add componentDidMount');\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if(parsedContacts) {\n      this.setState({contacts: parsedContacts});\n    }\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    console.log('Add ComponentDidUpdate');\n    if(this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const {filter} = this.state;\n    const filteredContacts = this.visibleContacts();\n      return (\n          <div className={s.container}>\n              <ContactForm \n                onSubmit={this.formSubmitHandler} />\n\n              <h2>Contacts</h2>\n              <Filter \n                value={filter} \n                onChange={this.changeFilter}/>\n              <ContactList \n                contacts={filteredContacts} \n                onRemove={this.deleteContact}/>\n          </div>\n      );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2yzaG\",\"items\":\"ContactList_items__KN97W\",\"text\":\"ContactList_text__2k-wt\",\"delete_btn\":\"ContactList_delete_btn__3naVW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__16vKQ\",\"filter__input\":\"Filter_filter__input__2D3mE\"};"],"sourceRoot":""}